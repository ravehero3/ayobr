<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Glassmorphism Audio Container</title>
    <style>
        body {
            margin: 0;
            padding: 50px;
            background: #000;
            position: relative;
            font-family: 'Arial', sans-serif;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
        }
        body::before,
        body::after {
            content: '';
            position: absolute;
            border-radius: 50%;
            filter: blur(100px);
            opacity: 0.3;
            z-index: 1;
        }
        body::before {
            width: 300px;
            height: 300px;
            background: radial-gradient(circle, #1e3a8a 0%, transparent 70%);
            top: 20%;
            left: 15%;
            animation: float1 20s infinite ease-in-out;
        }
        body::after {
            width: 400px;
            height: 400px;
            background: radial-gradient(circle, #1e40af 0%, transparent 70%);
            bottom: 20%;
            right: 10%;
            animation: float2 25s infinite ease-in-out;
        }
        @keyframes float1 {
            0%, 100% { transform: translate(0, 0) scale(1); }
            33% { transform: translate(50px, -30px) scale(1.1); }
            66% { transform: translate(-30px, 40px) scale(0.9); }
        }
        @keyframes float2 {
            0%, 100% { transform: translate(0, 0) scale(1); }
            50% { transform: translate(-40px, -50px) scale(1.2); }
        }
        .container {
            position: relative;
            width: 400px;
            height: 200px;
            background: rgba(0, 0, 0, 0.44);
            border-radius: 16px;
            box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
            backdrop-filter: blur(11.4px);
            -webkit-backdrop-filter: blur(11.4px);
            border: 1px solid rgba(0, 0, 0, 0.09);
            padding: 30px;
            transition: all 0.3s ease;
            cursor: pointer;
            overflow: visible;
            z-index: 10;
        }
        
        .container:hover {
            transform: scale(1.02);
            box-shadow: 
                0 4px 30px rgba(0, 0, 0, 0.1),
                0 0 40px rgba(19, 0, 255, 0.3),
                0 0 80px rgba(79, 172, 254, 0.2);
        }
        .container:not(:hover) {
            background: transparent;
            border: 1px solid rgba(255, 255, 255, 0.1);
        }
        .close-btn {
            position: absolute;
            top: 15px;
            right: 15px;
            width: 20px;
            height: 20px;
            opacity: 0;
            transition: opacity 0.3s ease;
            cursor: pointer;
        }
        .container:hover .close-btn {
            opacity: 1;
        }
        .close-btn::before,
        .close-btn::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 16px;
            height: 2px;
            background: #000;
            transform: translate(-50%, -50%) rotate(45deg);
        }
        .close-btn::after {
            transform: translate(-50%, -50%) rotate(-45deg);
        }
        .title {
            color: #fff;
            font-size: 18px;
            font-weight: 600;
            margin-bottom: 8px;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
        }
        .subtitle {
            color: rgba(255, 255, 255, 0.8);
            font-size: 14px;
            margin-bottom: 30px;
            text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
        }
        .progress-container {
            position: relative;
            width: 100%;
            height: 8px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 4px;
            overflow: visible;
            margin-top: 40px;
        }
        .progress-bar {
            height: 100%;
            width: 65%;
            background: #333;
            border-radius: 4px;
            position: relative;
            transition: all 0.3s ease;
            box-shadow: none;
        }
        .container:hover .progress-bar {
            background: linear-gradient(90deg, #1300ff 0%, #4facfe 100%);
            box-shadow: 
                0 0 20px rgba(19, 0, 255, 0.25),
                0 0 40px rgba(19, 0, 255, 0.15),
                inset 0 2px 4px rgba(255, 255, 255, 0.2),
                inset 0 -2px 4px rgba(0, 0, 0, 0.2);
        }
        .particle {
            position: absolute;
            width: 3px;
            height: 3px;
            background: rgba(255, 255, 255, 0.8);
            border-radius: 50%;
            pointer-events: none;
            opacity: 0;
            z-index: 1000;
            box-shadow: 0 0 6px rgba(255, 255, 255, 0.6);
            transition: opacity 0.3s ease;
        }
        
        /* Individual particle animations with unique paths - much slower */
        @keyframes particle1 {
            0% { transform: translate(-20px, 10px) scale(0); opacity: 0; }
            10% { transform: translate(30px, -25px) scale(1); opacity: 0.8; }
            25% { transform: translate(-40px, -15px) scale(0.7); opacity: 0.6; }
            40% { transform: translate(60px, 35px) scale(1.2); opacity: 0.9; }
            60% { transform: translate(-25px, -40px) scale(0.8); opacity: 0.5; }
            80% { transform: translate(45px, 20px) scale(1); opacity: 0.7; }
            100% { transform: translate(0px, 0px) scale(0); opacity: 0; }
        }
        
        @keyframes particle2 {
            0% { transform: translate(15px, -30px) scale(0); opacity: 0; }
            15% { transform: translate(-35px, 40px) scale(1.1); opacity: 0.7; }
            30% { transform: translate(50px, -10px) scale(0.9); opacity: 0.8; }
            45% { transform: translate(-20px, 25px) scale(1.3); opacity: 0.6; }
            65% { transform: translate(35px, -35px) scale(0.6); opacity: 0.9; }
            85% { transform: translate(-40px, 15px) scale(1); opacity: 0.4; }
            100% { transform: translate(10px, -5px) scale(0); opacity: 0; }
        }
        
        @keyframes particle3 {
            0% { transform: translate(-10px, 25px) scale(0); opacity: 0; }
            20% { transform: translate(40px, -20px) scale(0.8); opacity: 0.9; }
            35% { transform: translate(-50px, 30px) scale(1.1); opacity: 0.5; }
            50% { transform: translate(25px, -40px) scale(1.4); opacity: 0.8; }
            70% { transform: translate(-30px, 20px) scale(0.7); opacity: 0.6; }
            90% { transform: translate(55px, -15px) scale(1); opacity: 0.3; }
            100% { transform: translate(5px, 10px) scale(0); opacity: 0; }
        }
        
        @keyframes particle4 {
            0% { transform: translate(25px, -15px) scale(0); opacity: 0; }
            12% { transform: translate(-45px, -35px) scale(1.2); opacity: 0.8; }
            28% { transform: translate(35px, 45px) scale(0.6); opacity: 0.7; }
            42% { transform: translate(-15px, -20px) scale(1.5); opacity: 0.5; }
            58% { transform: translate(60px, 10px) scale(0.9); opacity: 0.9; }
            75% { transform: translate(-25px, 35px) scale(1.1); opacity: 0.4; }
            100% { transform: translate(-5px, -10px) scale(0); opacity: 0; }
        }
        
        @keyframes particle5 {
            0% { transform: translate(-35px, -20px) scale(0); opacity: 0; }
            18% { transform: translate(20px, 50px) scale(1); opacity: 0.6; }
            32% { transform: translate(-60px, -5px) scale(0.8); opacity: 0.8; }
            48% { transform: translate(40px, -45px) scale(1.3); opacity: 0.7; }
            64% { transform: translate(-10px, 30px) scale(0.7); opacity: 0.5; }
            82% { transform: translate(50px, -25px) scale(1.1); opacity: 0.8; }
            100% { transform: translate(-15px, 15px) scale(0); opacity: 0; }
        }
        
        @keyframes particle6 {
            0% { transform: translate(45px, 35px) scale(0); opacity: 0; }
            14% { transform: translate(-20px, -40px) scale(1.1); opacity: 0.9; }
            30% { transform: translate(65px, 15px) scale(0.9); opacity: 0.6; }
            46% { transform: translate(-35px, 50px) scale(1.2); opacity: 0.8; }
            62% { transform: translate(30px, -30px) scale(0.8); opacity: 0.4; }
            78% { transform: translate(-55px, 25px) scale(1); opacity: 0.7; }
            100% { transform: translate(20px, -10px) scale(0); opacity: 0; }
        }
        
        @keyframes particle7 {
            0% { transform: translate(-25px, 40px) scale(0); opacity: 0; }
            16% { transform: translate(55px, -25px) scale(0.9); opacity: 0.7; }
            34% { transform: translate(-40px, -30px) scale(1.4); opacity: 0.8; }
            50% { transform: translate(15px, 40px) scale(0.6); opacity: 0.9; }
            68% { transform: translate(-60px, 10px) scale(1.1); opacity: 0.5; }
            84% { transform: translate(35px, -40px) scale(0.8); opacity: 0.6; }
            100% { transform: translate(-10px, 20px) scale(0); opacity: 0; }
        }
        
        .particle:nth-child(1) { 
            top: -10px; 
            left: 12%; 
            animation: particle1 20s infinite ease-in-out;
            animation-delay: 0s;
        }
        .particle:nth-child(2) { 
            top: 15px; 
            left: 28%; 
            animation: particle2 22s infinite ease-in-out;
            animation-delay: 3s;
        }
        .particle:nth-child(3) { 
            top: -25px; 
            left: 45%; 
            animation: particle3 18s infinite ease-in-out;
            animation-delay: 6s;
        }
        .particle:nth-child(4) { 
            top: 20px; 
            left: 62%; 
            animation: particle4 24s infinite ease-in-out;
            animation-delay: 2s;
        }
        .particle:nth-child(5) { 
            top: -15px; 
            left: 75%; 
            animation: particle5 21s infinite ease-in-out;
            animation-delay: 8s;
        }
        .particle:nth-child(6) { 
            top: 30px; 
            left: 18%; 
            animation: particle6 23s infinite ease-in-out;
            animation-delay: 5s;
        }
        .particle:nth-child(7) { 
            top: -35px; 
            left: 38%; 
            animation: particle7 19s infinite ease-in-out;
            animation-delay: 9s;
        }
        
        .container:hover .particle {
            opacity: 1;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="close-btn"></div>
        
        <div class="title">Midnight Echoes</div>
        <div class="subtitle">Abstract Soundscape Collection</div>
        
        <div class="progress-container">
            <div class="progress-bar">
                <div class="particle"></div>
                <div class="particle"></div>
                <div class="particle"></div>
                <div class="particle"></div>
                <div class="particle"></div>
                <div class="particle"></div>
                <div class="particle"></div>
            </div>
        </div>
    </div>
    
    <script>
        const container = document.querySelector('.container');
        const progressBar = document.querySelector('.progress-bar');
        const maxParticles = 7;
        
        // Function to count current particles
        function getCurrentParticleCount() {
            return progressBar.querySelectorAll('.particle').length;
        }
        
        // Function to create new particles dynamically (much slower)
        function createParticle() {
            if (getCurrentParticleCount() >= maxParticles) return;
            
            const particle = document.createElement('div');
            particle.classList.add('particle');
            
            // Random starting position
            const startTop = Math.random() * 60 - 30; // -30px to 30px
            const startLeft = Math.random() * 100; // 0% to 100%
            
            particle.style.top = startTop + 'px';
            particle.style.left = startLeft + '%';
            
            // Create unique animation (much slower)
            const animationName = `dynamicParticle${Date.now()}`;
            const keyframes = `
                @keyframes ${animationName} {
                    0% { transform: translate(0px, 0px) scale(0); opacity: 0; }
                    10% { transform: translate(${Math.random() * 60 - 30}px, ${Math.random() * 60 - 30}px) scale(${0.8 + Math.random() * 0.4}); opacity: ${0.5 + Math.random() * 0.3}; }
                    25% { transform: translate(${Math.random() * 80 - 40}px, ${Math.random() * 80 - 40}px) scale(${0.6 + Math.random() * 0.6}); opacity: ${0.4 + Math.random() * 0.4}; }
                    50% { transform: translate(${Math.random() * 100 - 50}px, ${Math.random() * 100 - 50}px) scale(${0.7 + Math.random() * 0.8}); opacity: ${0.6 + Math.random() * 0.3}; }
                    75% { transform: translate(${Math.random() * 60 - 30}px, ${Math.random() * 60 - 30}px) scale(${0.5 + Math.random() * 0.5}); opacity: ${0.3 + Math.random() * 0.4}; }
                    100% { transform: translate(0px, 0px) scale(0); opacity: 0; }
                }
            `;
            
            // Add keyframes to document
            const style = document.createElement('style');
            style.textContent = keyframes;
            document.head.appendChild(style);
            
            // Apply animation (much slower - 15-25 seconds)
            particle.style.animation = `${animationName} ${15 + Math.random() * 10}s infinite ease-in-out`;
            particle.style.animationDelay = Math.random() * 5 + 's';
            
            progressBar.appendChild(particle);
            
            // Remove particle after some time
            setTimeout(() => {
                if (particle.parentNode) {
                    particle.remove();
                    document.head.removeChild(style);
                }
            }, 30000);
        }
        
        let hoverInterval = null;
        
        // Add new particles on hover (but maintain max 7)
        container.addEventListener('mouseenter', () => {
            hoverInterval = setInterval(() => {
                if (container.matches(':hover') && getCurrentParticleCount() < maxParticles) {
                    createParticle();
                }
            }, 2000); // Create new particle every 2 seconds
        });
        
        // Clear interval when not hovering
        container.addEventListener('mouseleave', () => {
            if (hoverInterval) {
                clearInterval(hoverInterval);
                hoverInterval = null;
            }
        });
        
        // Remove excess particles if somehow we go over limit
        setInterval(() => {
            const particles = progressBar.querySelectorAll('.particle');
            if (particles.length > maxParticles) {
                const excessParticles = particles.length - maxParticles;
                for (let i = 0; i < excessParticles; i++) {
                    const randomParticle = particles[Math.floor(Math.random() * particles.length)];
                    if (randomParticle) {
                        randomParticle.style.opacity = '0';
                        setTimeout(() => {
                            if (randomParticle.parentNode) {
                                randomParticle.remove();
                            }
                        }, 300);
                    }
                }
            }
        }, 3000);
    </script>
</body>
</html>